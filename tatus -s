[1mdiff --git a/src/components/shades/ShadeSwiper.tsx b/src/components/shades/ShadeSwiper.tsx[m
[1mindex 8ba4a38..2f0b380 100644[m
[1m--- a/src/components/shades/ShadeSwiper.tsx[m
[1m+++ b/src/components/shades/ShadeSwiper.tsx[m
[36m@@ -8,24 +8,29 @@[m [mimport 'swiper/css';[m
 import 'swiper/css/pagination';[m
 import { ChevronLeft, ChevronRight } from 'lucide-react';[m
 import { Shade } from '@/types/shades';[m
[31m-import { SHADE_DATA } from '@/data/ShadeData';[m
 import cn from 'classnames';[m
 [m
 interface ShadeSwiperProps {[m
   onSelectShade: (shade: Shade) => void;[m
   selectedShade: Shade | null;[m
   customShades: Shade[];[m
[32m+[m[32m  builtInShades: Shade[];[m
 }[m
 [m
[31m-export default function ShadeSwiper({ onSelectShade, selectedShade, customShades }: ShadeSwiperProps) {[m
[32m+[m[32mexport default function ShadeSwiper({[m[41m [m
[32m+[m[32m  onSelectShade,[m[41m [m
[32m+[m[32m  selectedShade,[m[41m [m
[32m+[m[32m  customShades,[m[41m [m
[32m+[m[32m  builtInShades[m[41m [m
[32m+[m[32m}: ShadeSwiperProps) {[m
   const [activeTab, setActiveTab] = useState<'default' | 'custom'>('default');[m
[31m-  const [currentShades, setCurrentShades] = useState<Shade[]>(SHADE_DATA);[m
[32m+[m[32m  const [currentShades, setCurrentShades] = useState<Shade[]>(builtInShades);[m
   const [activeIndex, setActiveIndex] = useState(0);[m
   [m
   // Update displayed shades based on active tab[m
   useEffect(() => {[m
[31m-    setCurrentShades(activeTab === 'default' ? SHADE_DATA : customShades);[m
[31m-  }, [activeTab, customShades]);[m
[32m+[m[32m    setCurrentShades(activeTab === 'default' ? builtInShades : customShades);[m
[32m+[m[32m  }, [activeTab, customShades, builtInShades]);[m
   [m
   // Handle shade selection[m
   const handleSelectShade = useCallback((shade: Shade) => {[m
[36m@@ -46,118 +51,124 @@[m [mexport default function ShadeSwiper({ onSelectShade, selectedShade, customShades[m
       >[m
         <div [m
           className={cn([m
[31m-            "w-12 h-12 rounded-full mb-2 border-2 transition-all cursor-pointer",[m
[31m-            isSelected ? "border-black shadow-lg" : "border-transparent"[m
[32m+[m[32m            "w-12 h-12 rounded-full mb-2 border-2 transition-all cursor-pointer shadow",[m
[32m+[m[32m            isSelected ? "border-blue-500 shadow-lg" : "border-transparent"[m
           )}[m
           style={{ backgroundColor: shade.colorHex }}[m
[31m-        />[m
[31m-        <p className="text-xs font-medium text-neutral-800 text-center line-clamp-1 max-w-[80px]">[m
[32m+[m[32m        ></div>[m
[32m+[m[32m        <span className={cn([m
[32m+[m[32m          "text-xs font-medium text-center line-clamp-2 transition-all",[m
[32m+[m[32m          isSelected ? "text-white" : "text-gray-300"[m
[32m+[m[32m        )}>[m
           {shade.name}[m
[31m-        </p>[m
[32m+[m[32m        </span>[m
       </div>[m
     );[m
[31m-  }, [handleSelectShade, selectedShade]);[m
[32m+[m[32m  }, [selectedShade, handleSelectShade]);[m
   [m
[31m-  // Show empty state for custom shades[m
[31m-  const renderEmptyCustomShades = useCallback(() => {[m
[31m-    return ([m
[31m-      <div className="h-full w-full flex flex-col items-center justify-center p-6">[m
[31m-        <div className="w-16 h-16 rounded-full border-2 border-dashed border-neutral-300 mb-3 flex items-center justify-center">[m
[31m-          <span className="text-neutral-400 text-xl">+</span>[m
[31m-        </div>[m
[31m-        <p className="text-neutral-500 text-sm text-center">[m
[31m-          No custom shades yet.<br />Create your own shade to see it here.[m
[31m-        </p>[m
[31m-      </div>[m
[31m-    );[m
[31m-  }, []);[m
[32m+[m[32m  // Render tab button[m
[32m+[m[32m  const TabButton = ({[m[41m [m
[32m+[m[32m    type,[m[41m [m
[32m+[m[32m    label,[m[41m [m
[32m+[m[32m    count[m[41m [m
[32m+[m[32m  }: {[m[41m [m
[32m+[m[32m    type: 'default' | 'custom';[m
[32m+[m[32m    label: string;[m
[32m+[m[32m    count: number;[m
[32m+[m[32m  }) => ([m
[32m+[m[32m    <button[m
[32m+[m[32m      className={cn([m
[32m+[m[32m        "px-4 py-2 rounded-full text-sm font-medium transition-all flex items-center",[m
[32m+[m[32m        activeTab === type[m[41m [m
[32m+[m[32m          ? "bg-gray-800 text-white"[m[41m [m
[32m+[m[32m          : "bg-gray-900/50 text-gray-400 hover:bg-gray-800/70"[m
[32m+[m[32m      )}[m
[32m+[m[32m      onClick={() => setActiveTab(type)}[m
[32m+[m[32m    >[m
[32m+[m[32m      {label}[m
[32m+[m[32m      {count > 0 && ([m
[32m+[m[32m        <span className="ml-1.5 text-xs bg-gray-700 rounded-full px-1.5 py-0.5 min-w-5 inline-flex justify-center">[m
[32m+[m[32m          {count}[m
[32m+[m[32m        </span>[m
[32m+[m[32m      )}[m
[32m+[m[32m    </button>[m
[32m+[m[32m  );[m
   [m
   return ([m
[31m-    <div className="h-full flex flex-col">[m
[31m-      {/* Tab Navigation */}[m
[31m-      <div className="flex border-b border-neutral-200 w-full">[m
[31m-        <div className="flex mx-auto">[m
[31m-          <button[m
[31m-            onClick={() => setActiveTab('default')}[m
[31m-            className={cn([m
[31m-              "px-4 py-3 text-sm font-medium relative",[m
[31m-              activeTab === 'default' ? "text-black" : "text-neutral-500"[m
[31m-            )}[m
[31m-          >[m
[31m-            Default Shades[m
[31m-            {activeTab === 'default' && ([m
[31m-              <motion.div [m
[31m-                layoutId="activeTabIndicator"[m
[31m-                className="absolute bottom-0 left-0 right-0 h-0.5 bg-black"[m
[31m-              />[m
[31m-            )}[m
[31m-          </button>[m
[31m-          <button[m
[31m-            onClick={() => setActiveTab('custom')}[m
[31m-            className={cn([m
[31m-              "px-4 py-3 text-sm font-medium relative",[m
[31m-              activeTab === 'custom' ? "text-black" : "text-neutral-500"[m
[31m-            )}[m
[31m-          >[m
[31m-            My Shades[m
[31m-            {activeTab === 'custom' && ([m
[31m-              <motion.div [m
[31m-                layoutId="activeTabIndicator"[m
[31m-                className="absolute bottom-0 left-0 right-0 h-0.5 bg-black"[m
[31m-              />[m
[31m-            )}[m
[31m-          </button>[m
[31m-        </div>[m
[32m+[m[32m    <div className="w-full">[m
[32m+[m[32m      {/* Tabs */}[m
[32m+[m[32m      <div className="flex justify-center gap-2 mb-4">[m
[32m+[m[32m        <TabButton type="default" label="Built-in" count={builtInShades.length} />[m
[32m+[m[32m        <TabButton type="custom" label="Custom" count={customShades.length} />[m
       </div>[m
       [m
[31m-      {/* Shade Swiper */}[m
[31m-      <div className="flex-1 flex items-center relative">[m
[31m-        {/* Navigation Arrows */}[m
[31m-        <button [m
[31m-          className="absolute left-2 z-10 w-8 h-8 bg-white/80 backdrop-blur-sm shadow-sm rounded-full flex items-center justify-center text-neutral-700 hover:bg-white transition"[m
[31m-          onClick={() => (document.querySelector('.swiper-button-prev') as HTMLElement)?.click()}[m
[31m-        >[m
[31m-          <ChevronLeft size={16} />[m
[31m-        </button>[m
[31m-        <button [m
[31m-          className="absolute right-2 z-10 w-8 h-8 bg-white/80 backdrop-blur-sm shadow-sm rounded-full flex items-center justify-center text-neutral-700 hover:bg-white transition"[m
[31m-          onClick={() => (document.querySelector('.swiper-button-next') as HTMLElement)?.click()}[m
[32m+[m[32m      {/* Swiper */}[m
[32m+[m[32m      <div className="relative">[m
[32m+[m[32m        <Swiper[m
[32m+[m[32m          modules={[Pagination, Navigation]}[m
[32m+[m[32m          spaceBetween={4}[m
[32m+[m[32m          slidesPerView={4}[m
[32m+[m[32m          pagination={{ clickable: t